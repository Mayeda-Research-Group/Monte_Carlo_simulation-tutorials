{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}C:\Users\emayeda\Box\GSA2019_bias_workshop\Confounding_simulation_tutorial\confounding_simulation_Stata\Do_files\..\Logs\simulation_workshop_confounding_log.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}13 Nov 2019, 11:37:21
{txt}
{com}. 
. 
. /*Start timer*/
. timer clear 1
{txt}
{com}. timer on 1
{txt}
{com}. 
. *call preamble file
. do 1_simulation_workshop_confounding_preamble.do
{txt}
{com}. /******************************************************************************/
. /* GSA Workshop: Bias Analysis                                                                                            */
. /* November 13, 2019                                                                                                              */
. /* Elizabeth Rose Mayeda, UCLA Fielding School of Public Health                           */
. /* Questions/Comments: ermayeda@ph.ucla.edu                                                                       */
. /*                                                                                                                                                        */
. /* Simulation example: Bias from unmeasured confounding                                           */
. /*                                                                                                                                                        */
. /* Required files to run simulation:                                                                              */
. /* 1) simulation_workshop_confounding_preamble.do:                                                        */ 
. /*              -Sets parameter inputs for simulation                                                             */
. /* 2) simulation_workshop_confounding_data_gen_analysis.do:                               */
. /*              -Generates and analyzes data and stores results                                           */
. /* 3) simulation_workshop_confounding_run.do:                                                             */ 
. /*              -Runs simulation and stores results                                                                       */
. /*                                                                                                                                                        */
. /* Stata version 15                                                                                                                       */
. /******************************************************************************/
. 
. /******************************************************************************/
. /* The purpose of this file is to set the parameter values (stored as             */
. /* global macro variables) to be used in the data-generation and analysis         */ 
. /* file. This way, you can have separate files for different parameter sets   */ 
. /* and use one file for the data-generation and analysis code.                            */
. /* If a specific path is not included for a given causal structure of             */ 
. /* interest, set the parameter to 0.                                                                              */
. /******************************************************************************/
. 
. 
. /*******************************************************/
. /******** Set parameters                                                ********/
. /*******************************************************/
. global B = 1000                         //number of iterations of sample generation
{txt}
{com}. global num_obs = 5000                   //number of observations in each sample
{txt}
{com}. 
. *Parameters for odds of exposure
. global g0 = ln(0.20/(1-0.20))   //log odds [p/(1-p)] of exposure for ref group (U=0)
{txt}
{com}. global g1 = ln(2.0)                     //effect of one-unit higher U on log odds of exposure 
{txt}
{com}. 
. *Parameters for odds of outcome
. global b0 = ln(0.10/(1-0.10))   //log odds [p/(1-p)] of outcome for ref group (U=0,exp=0)
{txt}
{com}. global b1 = ln(1.0)                     //effect of exposure on log odds of outcome
{txt}
{com}. global b2 = ln(2.0)                     //effect of one-unit higher U on log odds of outcome 
{txt}
{com}. 
. 
. 
{txt}end of do-file

{com}. 
. /*Specify desired number of iterations of sample generation*/
. local B = $B //Number of iterations of sample generation
{txt}
{com}. 
. /*Create local variable for causal/true OR for effect of exposure on outcome*/
. local true_OR_exposure_outcome = exp($b1)
{txt}
{com}. 
. 
. /*Create a local macro variable for "scalar_X = variable_X".
> We will this local macro in the simulate command. This will pull in scalars  
> fromthe data generation and analysis file and store each scalar as a variable
> with the same name.*/
. local simlist ""
{txt}
{com}. foreach x in mean_U p_exposure p_outcome ///
>                 OR_exposure_Uyes OR_exposure_Uno ///
>                 lb_OR_exposure_Uyes ub_OR_exposure_Uyes ///
>                 lb_OR_exposure_Uno ub_OR_exposure_Uno {c -(} 
{txt}  2{com}.    local simlist "`simlist' `x'=`x'"
{txt}  3{com}. {c )-}
{txt}
{com}. 
. 
. /*Run simulation*/
. simulate `simlist', ///
> reps(`B') seed(67208113): do 2_simulation_workshop_confounding_data_gen_analysis //use name of your data generation do file
{p2colset 10 20 24 2}{...}

{txt}{p2col :command:}do 2_simulation_workshop_confounding_data_gen_analysis{p_end}
{p2colset 11 20 24 2}{...}
{p2col :mean_U:}{res:mean_U}{p_end}
{p2colset 7 20 24 2}{...}
{p2col :p_exposure:}{res:p_exposure}{p_end}
{p2colset 8 20 24 2}{...}
{p2col :p_outcome:}{res:p_outcome}{p_end}
{p2colset 1 20 24 2}{...}
{p2col :OR_exposure_Uyes:}{res:OR_exposure_Uyes}{p_end}
{p2colset 2 20 24 2}{...}
{p2col :OR_exposure_Uno:}{res:OR_exposure_Uno}{p_end}
{p2colset 1 20 24 2}{...}
{p2col :lb_OR_exposure~s:}{res:lb_OR_exposure_Uyes}{p_end}
{p2colset 1 20 24 2}{...}
{p2col :ub_OR_exposure~s:}{res:ub_OR_exposure_Uyes}{p_end}
{p2colset 1 20 24 2}{...}
{p2col :lb_OR_exposure~o:}{res:lb_OR_exposure_Uno}{p_end}
{p2colset 1 20 24 2}{...}
{p2col :ub_OR_exposure~o:}{res:ub_OR_exposure_Uno}{p_end}

Simulations ({res}1000{txt})
{hline 4}{c +}{hline 3} 1 {hline 3}{c +}{hline 3} 2 {hline 3}{c +}{hline 3} 3 {hline 3}{c +}{hline 3} 4 {hline 3}{c +}{hline 3} 5 
..................................................    50
..................................................   100
..................................................   150
..................................................   200
..................................................   250
..................................................   300
..................................................   350
..................................................   400
..................................................   450
..................................................   500
..................................................   550
..................................................   600
..................................................   650
..................................................   700
..................................................   750
..................................................   800
..................................................   850
..................................................   900
..................................................   950
..................................................  1000

{com}. 
. 
. /*Across B replications, calculate and store mean value of each variable as a scalar and as a local variable*/ 
. *Take the log of the ORs so that means are calculated correctly
. *Round scalars to two decimal places
. gen log_OR_exposure_Uyes = ln(OR_exposure_Uyes)                                                                                                                                                                         
{txt}
{com}. gen log_OR_exposure_Uno = ln(OR_exposure_Uno)
{txt}
{com}. foreach b in mean_U ///
>                          p_exposure ///
>                          p_outcome ///
>                          log_OR_exposure_Uyes ///
>                          log_OR_exposure_Uno {c -(}
{txt}  2{com}. summarize `b', meanonly
{txt}  3{com}. scalar mean_`b' = round(r(mean),0.001)
{txt}  4{com}. local mean_`b' = round(r(mean),0.001)
{txt}  5{com}. {c )-}
{txt}
{com}. scalar exp_mean_log_OR_exposure_Uyes = round(exp(mean_log_OR_exposure_Uyes),0.01)
{txt}
{com}. local exp_mean_log_OR_exposure_Uyes  = round(exp(mean_log_OR_exposure_Uyes),0.01)
{txt}
{com}. scalar exp_mean_log_OR_exposure_Uno  = round(exp(mean_log_OR_exposure_Uno),0.01)
{txt}
{com}. local exp_mean_log_OR_exposure_Uno   = round(exp(mean_log_OR_exposure_Uno),0.01)
{txt}
{com}. 
. 
. /*For each replication, generate indicator variable for whether the 95% CI for the weight status-death OR includes the causal/true OR*/
. gen covg_OR_exposure_Uyes = (ub_OR_exposure_Uyes > `true_OR_exposure_outcome' & lb_OR_exposure_Uyes < `true_OR_exposure_outcome')
{txt}
{com}. gen covg_OR_exposure_Uno = (ub_OR_exposure_Uno > `true_OR_exposure_outcome' & lb_OR_exposure_Uno < `true_OR_exposure_outcome')
{txt}
{com}. 
. 
. /*Across B replications, calculate and store mean value of each variable as a scalar and as a local variable*/ 
. foreach b in covg_OR_exposure_Uno covg_OR_exposure_Uyes {c -(}
{txt}  2{com}. summarize `b', meanonly
{txt}  3{com}. scalar P_`b' = round(r(mean),0.001)
{txt}  4{com}. local P_`b' = round(r(mean),0.001)
{txt}  5{com}. {c )-}
{txt}
{com}. 
. 
. /*Generate plots of estimated OR and 95% CI across B simulated samples*/
. gen sample = _n
{txt}
{com}. 
. *Plot estimated OR adjusted for U
. local P_covg_OR_exposure_Uyes : di %4.3f `P_covg_OR_exposure_Uyes' /*fixing rounding problem in this local variable*/
{res}{txt}
{com}. twoway (rcap lb_OR_exposure_Uyes ub_OR_exposure_Uyes sample) ///
> (scatter OR_exposure_Uyes sample, msymbol(circle) mcolor(navy) mfcolor(edkblue)) ///
> (function y=1 , lwidth(thick) clcolor(red) lpat(solid) range(sample) ) ///
> , ///
> ytitle(estimated OR (95% CI)) ///
> ylabel(0.6(.2)2.8) xscale(off) legend(off) ///
> title(Estimated adjusted OR and 95% CI from `B' simulated samples, size(medium)) ///
> subtitle(mean estimated OR = `exp_mean_log_OR_exposure_Uyes'; 95% CI coverage = `P_covg_OR_exposure_Uyes')
{res}{txt}
{com}.         graph export `plots'confounding_simulation_plot_est_OR_CI_adj.png,replace
{txt}(file ..\Plots\confounding_simulation_plot_est_OR_CI_adj.png written in PNG format)

{com}. 
. *Plot estimated OR unadjusted for U
. twoway (rcap lb_OR_exposure_Uno ub_OR_exposure_Uno sample) ///
> (scatter OR_exposure_Uno sample, msymbol(circle) mcolor(navy) mfcolor(edkblue)) ///
> (function y=1 , lwidth(thick) clcolor(red) lpat(solid) range(sample) ) ///
> , ///
> ytitle(estimated OR (95% CI)) ///
> ylabel(0.6(.2)2.8) xscale(off) legend(off) ///
> title(Estimated crude OR and 95% CI from `B' simulated samples, size(medium)) ////
> subtitle(mean estimated OR = `exp_mean_log_OR_exposure_Uno'; 95% CI coverage = `P_covg_OR_exposure_Uno')
{res}{txt}
{com}.         graph export `plots'confounding_simulation_plot_est_OR_CI_crude.png,replace
{txt}(file ..\Plots\confounding_simulation_plot_est_OR_CI_crude.png written in PNG format)

{com}. 
. 
. /*List results  across the B iterations of sample generation*/
. *Across B replications, average mean value of U, proportion of people with exposure=1, proportion of people with outcome=1
. scalar list mean_mean_U mean_p_exposure mean_p_outcome
{txt}mean_mean_U = {res}         0
{txt}mean_p_exposure = {res}      .221
{txt}mean_p_outcome = {res}      .117
{txt}
{com}. 
. *Across B replications, average estimated OR for exposure on outcome, adjusting for U
. scalar list exp_mean_log_OR_exposure_Uyes
{txt}exp_mean_log_OR_exposure_Uyes = {res}         1
{txt}
{com}. 
. *Across B replications, average estimated OR for exposure on outcome, not adjusting for U
. scalar list exp_mean_log_OR_exposure_Uno
{txt}exp_mean_log_OR_exposure_Uno = {res}      1.53
{txt}
{com}. 
. *Proportion of 95% CIs for OR for exposure on outcome that include the causal/true OR 
. scalar list P_covg_OR_exposure_Uyes P_covg_OR_exposure_Uno 
{txt}P_covg_OR_exposure_Uyes = {res}      .946
{txt}P_covg_OR_exposure_Uno = {res}      .008
{txt}
{com}. 
. 
. /***export data to Excel***/
. export excel using `data'simulation_workshop_confounding_results_each_replication, sheet("Results") sheetmodify firstrow(variables)
{res}{txt}file ..\Data\simulation_workshop_confounding_results_each_replication.xls saved

{com}. 
. /***save data***/
. save "`data'simulation_workshop_confounding_results_each_replication.dta", replace
{txt}file ..\Data\simulation_workshop_confounding_results_each_replication.dta saved

{com}. 
. /*End timer and display computational time (in seconds)*/
. timer off 1
{txt}
{com}. timer list 1
{res}   1:     98.04 /        1 =      98.0410
{txt}
{com}. 
{txt}end of do-file

{com}. exit, clear
